version: "3.4"

services:
    rabbitmq:
        image: rabbitmq:latest
        hostname: rabbitmq
        networks:
            - main
        ports:
            - "5672:5672"
        restart: always

    postgres:
        image: postgres:latest
        hostname: postgres
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        networks:
            - main
        ports:
            - "5432:5432"
        restart: always
        volumes:
            - postgresql-data:/var/lib/postgresql/data

    app:
        image: alannazhou/app
        hostname: app
        command: sh -c "wait-for postgres:5432 && python manage.py migrate && gunicorn flick.wsgi -b 0.0.0.0:8000"
        depends_on:
            - postgres
            - rabbitmq
        expose:
            - "8000"
        networks:
            - main
        restart: always
        volumes:
            - static:/static

    celery_worker:
        image: alannazhou/app
        hostname: celery_worker
        command: sh -c "wait-for rabbitmq:5672 && wait-for app:8000 -- celery -A flick worker -l info"
        depends_on:
            - app
            - postgres
            - rabbitmq
        deploy:
            replicas: 2
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    cpus: "0.50"
                    memory: 50M
                reservations:
                    cpus: "0.25"
                    memory: 20M
        networks:
            - main
        restart: always

    nginx:
        image: alannazhou/nginx
        depends_on:
            - app
        networks:
            - main
        ports:
            - "80:80"
        restart: always
        volumes:
            - ./wait-for:/bin/wait-for
            - static:/var/www/app/static

networks:
    main:

volumes:
    postgresql-data:
    static:
