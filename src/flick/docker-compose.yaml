version: "3.4"

services:
    redis:
        container_name: redis
        hostname: redis
        image: redis:latest
        networks:
            - main
        ports:
            - "6379:6379"
        restart: on-failure

    postgres:
        container_name: postgres
        hostname: postgres
        image: postgres:latest
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        networks:
            - main
        ports:
            - "5432:5432"
        restart: on-failure
        volumes:
            - postgresql-data:/var/lib/postgresql/data

    app:
        build: .
        command: sh -c "wait-for postgres:5432 && python manage.py collectstatic --no-input && python manage.py migrate && gunicorn flick.wsgi -b 0.0.0.0:8000"
        environment:
            - DJANGO_SETTINGS_MODULE=flick.settings
            - SECRET_KEY
        container_name: app
        depends_on:
            - postgres
            - redis
        expose:
            - "8000"
        hostname: app
        image: app-image
        networks:
            - main
        restart: on-failure

    celery_worker:
        command: sh -c "wait-for redis:6379 && wait-for app:8000 -- celery -A flick worker -l info"
        # container_name: celery_worker
        depends_on:
            - app
            - postgres
            - redis
        deploy:
            replicas: 2
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    cpus: "0.50"
                    memory: 50M
                reservations:
                    cpus: "0.25"
                    memory: 20M
        hostname: celery_worker
        image: app-image
        networks:
            - main
        restart: on-failure

networks:
    main:

volumes:
    postgresql-data:
