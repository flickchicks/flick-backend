version: "3.4"

services:
    redis:
        container_name: redis
        hostname: redis
        image: redis:latest
        networks:
            - main
        ports:
            - "6379:6379"
        restart: on-failure

    postgres:
        container_name: postgres
        hostname: postgres
        image: postgres:latest
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        networks:
            - main
        ports:
            - "5432:5432"
        restart: on-failure
        volumes:
            - postgresql-data:/var/lib/postgresql/data

    app:
        build: .
        command: sh -c "./wait-for-it.sh postgres:5432 && python manage.py migrate && gunicorn flick.wsgi -b 0.0.0.0:8000"
        container_name: app
        depends_on:
            - postgres
            - redis
        expose:
            - "8000"
        hostname: app
        image: app-image
        networks:
            - main
        restart: on-failure

    celery_worker:
        command: sh -c "./wait-for-it.sh redis:6379 && ./wait-for-it.sh app:8000 -- celery -A flick worker -l info --uid=0"
        depends_on:
            - app
            - postgres
            - redis
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        hostname: celery_worker
        image: app-image
        networks:
            - main
        restart: on-failure

networks:
    main:

volumes:
    postgresql-data:
